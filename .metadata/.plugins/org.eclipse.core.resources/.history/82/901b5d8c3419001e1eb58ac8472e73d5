 /******************************************************************************
 *
 * Module: ULTRASONIC
 *
 * File Name: ultrasonic.c
 *
 * Description: Source file for the ULTRASONIC driver
 *
 * Author: Nada Hefnawy
 *
 *******************************************************************************/
#include "ultrasonic.h"
#include "icu.h"
#include "common_macros.h"
#include "gpio.h"
#include "std_types.h"
#include <util/delay.h>
#include <math.h>
uint8 g_edgeCount = 0;
uint16 g_timeHigh = 0;

void Ultrasonic_init(void) {

	Icu_ConfigType Config_Ptr = { F_CPU_8, RISING };

	Icu_init(&Config_Ptr);

	Icu_setCallBack(Ultrasonic_edgeProcessing);

	GPIO_setupPinDirection(ULTRASONIC_TRIGGER_PORT_ID,ULTRASONIC_TRIGGER_PIN_ID,PIN_OUTPUT);

}

void Ultrasonic_Trigger(void) {

	//Icu_clearTimerValue();

	GPIO_writePin(ULTRASONIC_TRIGGER_PORT_ID,ULTRASONIC_TRIGGER_PIN_ID, LOGIC_HIGH);

	_delay_ms(10);

	GPIO_writePin(ULTRASONIC_TRIGGER_PORT_ID,ULTRASONIC_TRIGGER_PIN_ID, LOGIC_LOW);

}

uint16 Ultrasonic_readDistance(void) {
	Ultrasonic_Trigger();

	while(g_edgeCount != ULTRASONIC_NUM_OF_EDGES);

	return g_timeHigh/58;

}

void Ultrasonic_edgeProcessing(void) {

	g_edgeCount++;
	if (g_edgeCount == 1) {
		/*
		 * Clear the timer counter register to start measurements from the
		 * first detected rising edge
		 */
		Icu_clearTimerValue();
		/* Detect falling edge */
		Icu_setEdgeDetectionType(FALLING);
	} else if (g_edgeCount == 2) {
		/* Store the High time value */
		g_timeHigh = Icu_getInputCaptureValue();
		/* Detect rising edge */
		Icu_setEdgeDetectionType(RISING);
	}
}
